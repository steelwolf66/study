名称来源：zookeeper，动物园管理员（很多项目都是以动物命名的）
1.zookeeper 可以作为注册中心，例如Dubbo 
2.是Hadoop生态系统中的重要一员
3.ZooKeeper在构建集群时，最好使用奇数个构建

最初的目的是，用来做分布式环境的协调。
开源的、分布式协调服务

ZooKeeper在分布式架构中，是典型的分布式数据一致性解决方案，
可以基于ZooKeeper做数据发布/订阅、负载均衡、命名服务、分布式协调/通知、集群管理、Master选举、分布式锁、分布式队列等等功能

最常见的就是在Dubbo项目中，作为注册中心
这时的ZooKeeper就具有了集群管理功能：
1.容错、负载均衡
2.配置文件的集中管理
3.集群的入口
4.集群信息管理

这里说下ZooKeeper的集群配置，为什么要使用奇数，因为Leader选举算法，使用的是Zab协议，
Zab的核心思想是，多数server写成功，则任务数据写成功

ZooKeeper本身就是一个比较依赖集群的程序，只要半数以上的节点存活，ZooKeeper就能正常服务。这也是保证高可用的一个优势。
尤其是作为注册中心，提供服务发现和降级等等重要功能。

Zookeeper也是将数据保存在内存中，这就和redis类似，提供了比较优秀的吞吐能力，但是，也会存在数据持久化问题。



数据结构
ZooKeeper是树型结构，每个节点被成为zNode,每个zNode保存数据和自己的节点信息；
可以以文件目录来类比node模型，但是有一点特殊，就是zNode可以存信息，而我们操作系统中的文件夹是不存储信息的；

数据类型分为四种
持久化节点
临时节点 -e
顺序持久化节点 -s
顺序临时节点 -es


临时节点会随着客户端的关闭，而消失
常见命令
ls / ,creat,set,delete,deleteall(无视是否包含子节点)

Curator java客户端
ZClient 也不是很好用


